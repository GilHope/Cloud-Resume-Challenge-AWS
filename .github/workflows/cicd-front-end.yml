# name: Frontend CI/CD

# on:
#   push:
#     branches:
#     - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master

#     # Starts by configuring AWS credentials using parameter secrets.
#     # https://github.com/aws-actions/configure-aws-credentials
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: 'us-east-1' 

#     # Run a S3 sync action to upload complete website to the bucket. The '--delete' flag to ensure old files are deleted.
#     # https://docs.aws.amazon.com/cli/latest/reference/s3/sync.html
#     - name: S3 sync
#       # run: aws s3 sync ./resume3.0 s3://cloud-resume-challenge-bucket5673442 --delete
#       run: aws s3 sync ./resume3.0 s3://cloudresumebucket1234212321 --delete

#     # Running cloudfront invalidate so old website files are removed from cache.
#     # https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-invalidation.html
#     - name: Cloudfront create-invalidation
#       # run: aws cloudfront create-invalidation --distribution-id E25PTMM0VI4A49 --paths "/*"
#       run: aws cloudfront create-invalidation --distribution-id E2DDAT0PGE6TDZ --paths "/*"       
        
name: Frontend CI/CD

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # Starts by configuring AWS credentials using parameter secrets.
    # https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1' 
    ###
    - name: Update API URL
        run: |
          API_URL="https://${{ env.AWS_REGION }}.${{ env.ServerlessRestApi }}.execute-api.${{ env.AWS_REGION }}.amazonaws.com/Prod/VisitorCount"
          echo "API_URL=$API_URL" >> $GITHUB_ENV

    # Run a S3 sync action to upload complete website to the bucket. The '--delete' flag to ensure old files are deleted.
    # https://docs.aws.amazon.com/cli/latest/reference/s3/sync.html
    - name: S3 sync
      run: aws s3 sync ./resume3.0 s3://cloudresumebucket1234212321 --delete

    - name: Get CloudFront distribution ID
      id: get_distribution_id
      run: |
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name IaC --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" --output text)
        echo "::set-output name=distribution_id::$DISTRIBUTION_ID"

    - name: Cloudfront create-invalidation
      run: |
        DISTRIBUTION_ID=${{ steps.get_distribution_id.outputs.distribution_id }}
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

            
                